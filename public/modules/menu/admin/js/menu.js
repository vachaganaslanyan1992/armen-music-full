/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./Modules/Menu/node_modules/nestable2/jquery.nestable.js":
/*!****************************************************************!*\
  !*** ./Modules/Menu/node_modules/nestable2/jquery.nestable.js ***!
  \****************************************************************/
/***/ (() => {

eval("/*!\n * Nestable jQuery Plugin - Copyright (c) 2014 Ramon Smit - https://github.com/RamonSmit/Nestable\n */\n\n(function($, window, document, undefined) {\n    var hasTouch = 'ontouchstart' in document;\n\n    /**\n     * Detect CSS pointer-events property\n     * events are normally disabled on the dragging element to avoid conflicts\n     * https://github.com/ausi/Feature-detection-technique-for-pointer-events/blob/master/modernizr-pointerevents.js\n     */\n    var hasPointerEvents = (function() {\n        var el = document.createElement('div'),\n            docEl = document.documentElement;\n        if (!('pointerEvents' in el.style)) {\n            return false;\n        }\n        el.style.pointerEvents = 'auto';\n        el.style.pointerEvents = 'x';\n        docEl.appendChild(el);\n        var supports = window.getComputedStyle && window.getComputedStyle(el, '').pointerEvents === 'auto';\n        docEl.removeChild(el);\n        return !!supports;\n    })();\n\n    var defaults = {\n        contentCallback: function(item) {return item.content || '' ? item.content : item.id;},\n        listNodeName: 'ol',\n        itemNodeName: 'li',\n        handleNodeName: 'div',\n        contentNodeName: 'span',\n        rootClass: 'dd',\n        listClass: 'dd-list',\n        itemClass: 'dd-item',\n        dragClass: 'dd-dragel',\n        handleClass: 'dd-handle',\n        contentClass: 'dd-content',\n        collapsedClass: 'dd-collapsed',\n        placeClass: 'dd-placeholder',\n        noDragClass: 'dd-nodrag',\n        noChildrenClass: 'dd-nochildren',\n        emptyClass: 'dd-empty',\n        expandBtnHTML: '<button class=\"dd-expand\" data-action=\"expand\" type=\"button\">Expand</button>',\n        collapseBtnHTML: '<button class=\"dd-collapse\" data-action=\"collapse\" type=\"button\">Collapse</button>',\n        group: 0,\n        maxDepth: 5,\n        threshold: 20,\n        fixedDepth: false, //fixed item's depth\n        fixed: false,\n        includeContent: false,\n        scroll: false,\n        scrollSensitivity: 1,\n        scrollSpeed: 5,\n        scrollTriggers: {\n            top: 40,\n            left: 40,\n            right: -40,\n            bottom: -40\n        },\n        effect: {\n            animation: 'none',\n            time: 'slow'\n        },\n        callback: function(l, e, p) {},\n        onDragStart: function(l, e, p) {},\n        beforeDragStop: function(l, e, p) {},\n        listRenderer: function(children, options) {\n            var html = '<' + options.listNodeName + ' class=\"' + options.listClass + '\">';\n            html += children;\n            html += '</' + options.listNodeName + '>';\n\n            return html;\n        },\n        itemRenderer: function(item_attrs, content, children, options, item) {\n            var item_attrs_string = $.map(item_attrs, function(value, key) {\n                return ' ' + key + '=\"' + value + '\"';\n            }).join(' ');\n\n            var html = '<' + options.itemNodeName + item_attrs_string + '>';\n            html += '<' + options.handleNodeName + ' class=\"' + options.handleClass + '\">';\n            html += '<' + options.contentNodeName + ' class=\"' + options.contentClass + '\">';\n            html += content;\n            html += '</' + options.contentNodeName + '>';\n            html += '</' + options.handleNodeName + '>';\n            html += children;\n            html += '</' + options.itemNodeName + '>';\n\n            return html;\n        }\n    };\n\n    function Plugin(element, options) {\n        this.w  = $(document);\n        this.el = $(element);\n        options = options || defaults;\n\n        if (options.rootClass !== undefined && options.rootClass !== 'dd') {\n            options.listClass       = options.listClass ? options.listClass : options.rootClass + '-list';\n            options.itemClass       = options.itemClass ? options.itemClass : options.rootClass + '-item';\n            options.dragClass       = options.dragClass ? options.dragClass : options.rootClass + '-dragel';\n            options.handleClass     = options.handleClass ? options.handleClass : options.rootClass + '-handle';\n            options.collapsedClass  = options.collapsedClass ? options.collapsedClass : options.rootClass + '-collapsed';\n            options.placeClass      = options.placeClass ? options.placeClass : options.rootClass + '-placeholder';\n            options.noDragClass     = options.noDragClass ? options.noDragClass : options.rootClass + '-nodrag';\n            options.noChildrenClass = options.noChildrenClass ? options.noChildrenClass : options.rootClass + '-nochildren';\n            options.emptyClass      = options.emptyClass ? options.emptyClass : options.rootClass + '-empty';\n        }\n\n        this.options = $.extend({}, defaults, options);\n\n        // build HTML from serialized JSON if passed\n        if (this.options.json !== undefined) {\n            this._build();\n        }\n\n        this.init();\n    }\n\n    Plugin.prototype = {\n\n        init: function() {\n            var list = this;\n\n            list.reset();\n            list.el.data('nestable-group', this.options.group);\n            list.placeEl = $('<div class=\"' + list.options.placeClass + '\"/>');\n\n            var items = this.el.find(list.options.itemNodeName);\n            $.each(items, function(k, el) {\n                var item = $(el),\n                    parent = item.parent();\n                list.setParent(item);\n                if (parent.hasClass(list.options.collapsedClass)) {\n                    list.collapseItem(parent.parent());\n                }\n            });\n\n            // Append the .dd-empty div if the list don't have any items on init\n            if (!items.length) {\n                this.appendEmptyElement(this.el);\n            }\n\n            list.el.on('click', 'button', function(e) {\n                if (list.dragEl) {\n                    return;\n                }\n                var target = $(e.currentTarget),\n                    action = target.data('action'),\n                    item = target.parents(list.options.itemNodeName).eq(0);\n                if (action === 'collapse') {\n                    list.collapseItem(item);\n                }\n                if (action === 'expand') {\n                    list.expandItem(item);\n                }\n            });\n\n            var onStartEvent = function(e) {\n                var handle = $(e.target);\n                if (!handle.hasClass(list.options.handleClass)) {\n                    if (handle.closest('.' + list.options.noDragClass).length) {\n                        return;\n                    }\n                    handle = handle.closest('.' + list.options.handleClass);\n                }\n                if (!handle.length || list.dragEl) {\n                    return;\n                }\n\n                list.isTouch = /^touch/.test(e.type);\n                if (list.isTouch && e.touches.length !== 1) {\n                    return;\n                }\n\n                e.preventDefault();\n                list.dragStart(e.touches ? e.touches[0] : e);\n            };\n\n            var onMoveEvent = function(e) {\n                if (list.dragEl) {\n                    e.preventDefault();\n                    list.dragMove(e.touches ? e.touches[0] : e);\n                }\n            };\n\n            var onEndEvent = function(e) {\n                if (list.dragEl) {\n                    e.preventDefault();\n                    list.dragStop(e.touches ? e.changedTouches[0] : e);\n                }\n            };\n\n            if (hasTouch) {\n                list.el[0].addEventListener('touchstart', onStartEvent, false);\n                window.addEventListener('touchmove', onMoveEvent, false);\n                window.addEventListener('touchend', onEndEvent, false);\n                window.addEventListener('touchcancel', onEndEvent, false);\n            }\n\n            list.el.on('mousedown', onStartEvent);\n            list.w.on('mousemove', onMoveEvent);\n            list.w.on('mouseup', onEndEvent);\n\n            var destroyNestable = function()\n            {\n                if (hasTouch) {\n                    list.el[0].removeEventListener('touchstart', onStartEvent, false);\n                    window.removeEventListener('touchmove', onMoveEvent, false);\n                    window.removeEventListener('touchend', onEndEvent, false);\n                    window.removeEventListener('touchcancel', onEndEvent, false);\n                }\n\n                list.el.off('mousedown', onStartEvent);\n                list.w.off('mousemove', onMoveEvent);\n                list.w.off('mouseup', onEndEvent);\n\n                list.el.off('click');\n                list.el.unbind('destroy-nestable');\n\n                list.el.data(\"nestable\", null);\n            };\n\n            list.el.bind('destroy-nestable', destroyNestable);\n\n        },\n\n        destroy: function ()\n        {\n            this.el.trigger('destroy-nestable');\n        },\n\n        add: function (item)\n        {\n            var listClassSelector = '.' + this.options.listClass;\n            var tree = $(this.el).children(listClassSelector);\n\n            if (item.parent_id !== undefined) {\n                tree = tree.find('[data-id=\"' + item.parent_id + '\"]');\n                delete item.parent_id;\n\n                if (tree.children(listClassSelector).length === 0) {\n                    tree = tree.append(this.options.listRenderer('', this.options));\n                }\n\n                tree = tree.find(listClassSelector + ':first');\n                this.setParent(tree.parent());\n            }\n\n            tree.append(this._buildItem(item, this.options));\n        },\n\n        replace: function (item)\n        {\n            var html = this._buildItem(item, this.options);\n\n            this._getItemById(item.id)\n                .replaceWith(html);\n        },\n\n        //removes item and additional elements from list\n        removeItem: function (item){\n            var opts = this.options,\n                el   = this.el;\n\n            // remove item\n            item = item || this;\n            item.remove();\n\n            // remove empty children lists\n            var emptyListsSelector = '.' + opts.listClass\n                + ' .' + opts.listClass + ':not(:has(*))';\n            $(el).find(emptyListsSelector).remove();\n\n            // remove buttons if parents do not have children\n            var buttonsSelector = '[data-action=\"expand\"], [data-action=\"collapse\"]';\n            $(el).find(buttonsSelector).each(function() {\n                var siblings = $(this).siblings('.' + opts.listClass);\n                if (siblings.length === 0) {\n                    $(this).remove();\n                }\n            });\n        },\n\n        //removes item by itemId and run callback at the end\n        remove: function (itemId, callback)\n        {\n            var opts = this.options;\n            var list = this;\n            var item = this._getItemById(itemId);\n\n            //animation style\n            var animation = opts.effect.animation || 'fade';\n\n            //animation time\n            var time = opts.effect.time || 'slow';\n\n            //add fadeOut effect when removing\n            if (animation === 'fade'){\n                item.fadeOut(time, function(){\n                    list.removeItem(item);\n                });\n            }\n            else {\n                this.removeItem(item);\n            }\n\n            if (callback) callback();\n        },\n\n        //removes all items from the list and run callback at the end\n        removeAll: function(callback){\n\n            var list  = this,\n                opts  = this.options,\n                node  = list.el.find(opts.listNodeName).first(),\n                items = node.children(opts.itemNodeName);\n\n            //animation style\n            var animation = opts.effect.animation || 'fade';\n\n            //animation time\n            var time = opts.effect.time || 'slow';\n\n            function remove(){\n                //Removes each item and its children.\n                items.each(function() {\n                    list.removeItem($(this));\n                });\n                //Now we can again show our node element\n                node.show();\n                if (callback) callback();\n            }\n\n            //add fadeOut effect when removing\n            if (animation === 'fade'){\n                node.fadeOut(time, remove);\n            }\n            else {\n                remove();\n            }\n        },\n\n        _getItemById: function(itemId) {\n            return $(this.el).children('.' + this.options.listClass)\n                .find('[data-id=\"' + itemId + '\"]');\n        },\n\n        _build: function() {\n            var json = this.options.json;\n\n            if (typeof json === 'string') {\n                json = JSON.parse(json);\n            }\n\n            $(this.el).html(this._buildList(json, this.options));\n        },\n\n        _buildList: function(items, options) {\n            if (!items) {\n                return '';\n            }\n\n            var children = '';\n            var that = this;\n\n            $.each(items, function(index, sub) {\n                children += that._buildItem(sub, options);\n            });\n\n            return options.listRenderer(children, options);\n        },\n\n        _buildItem: function(item, options) {\n            function escapeHtml(text) {\n                var map = {\n                    '&': '&amp;',\n                    '<': '&lt;',\n                    '>': '&gt;',\n                    '\"': '&quot;',\n                    \"'\": '&#039;'\n                };\n\n                return text + \"\".replace(/[&<>\"']/g, function(m) { return map[m]; });\n            }\n\n            function filterClasses(classes) {\n                var new_classes = {};\n\n                for (var k in classes) {\n                    // Remove duplicates\n                    new_classes[classes[k]] = classes[k];\n                }\n\n                return new_classes;\n            }\n\n            function createClassesString(item, options) {\n                var classes = item.classes || {};\n\n                if (typeof classes === 'string') {\n                    classes = [classes];\n                }\n\n                var item_classes = filterClasses(classes);\n                item_classes[options.itemClass] = options.itemClass;\n\n                // create class string\n                return $.map(item_classes, function(val) {\n                    return val;\n                }).join(' ');\n            }\n\n            function createDataAttrs(attr) {\n                attr = $.extend({}, attr);\n\n                delete attr.children;\n                delete attr.classes;\n                delete attr.content;\n\n                var data_attrs = {};\n\n                $.each(attr, function(key, value) {\n                    if (typeof value === 'object') {\n                        value = JSON.stringify(value);\n                    }\n\n                    data_attrs[\"data-\" + key] = escapeHtml(value);\n                });\n\n                return data_attrs;\n            }\n\n            var item_attrs = createDataAttrs(item);\n            item_attrs[\"class\"] = createClassesString(item, options);\n\n            var content = options.contentCallback(item);\n            var children = this._buildList(item.children, options);\n            var html = $(options.itemRenderer(item_attrs, content, children, options, item));\n\n            this.setParent(html);\n\n            return html[0].outerHTML;\n        },\n\n        serialize: function() {\n            var data, list = this, step = function(level) {\n                var array = [],\n                    items = level.children(list.options.itemNodeName);\n                items.each(function() {\n                    var li = $(this),\n                        item = $.extend({}, li.data()),\n                        sub = li.children(list.options.listNodeName);\n\n                    if (list.options.includeContent) {\n                        var content = li.find('.' + list.options.contentClass).html();\n\n                        if (content) {\n                            item.content = content;\n                        }\n                    }\n\n                    if (sub.length) {\n                        item.children = step(sub);\n                    }\n                    array.push(item);\n                });\n                return array;\n            };\n            data = step(list.el.find(list.options.listNodeName).first());\n            return data;\n        },\n\n        asNestedSet: function() {\n            var list = this, o = list.options, depth = -1, ret = [], lft = 1;\n            var items = list.el.find(o.listNodeName).first().children(o.itemNodeName);\n\n            items.each(function () {\n                lft = traverse(this, depth + 1, lft);\n            });\n\n            ret = ret.sort(function(a,b){ return (a.lft - b.lft); });\n            return ret;\n\n            function traverse(item, depth, lft) {\n                var rgt = lft + 1, id, pid;\n\n                if ($(item).children(o.listNodeName).children(o.itemNodeName).length > 0 ) {\n                    depth++;\n                    $(item).children(o.listNodeName).children(o.itemNodeName).each(function () {\n                        rgt = traverse($(this), depth, rgt);\n                    });\n                    depth--;\n                }\n\n                id = $(item).attr('data-id');\n                if (isInt(id)) {\n                    id = parseInt(id);\n                }\n\n                pid = $(item).parent(o.listNodeName).parent(o.itemNodeName).attr('data-id') || '';\n                if (isInt(pid)) {\n                    id = parseInt(pid);\n                }\n\n                if (id) {\n                    ret.push({\"id\": id, \"parent_id\": pid, \"depth\": depth, \"lft\": lft, \"rgt\": rgt});\n                }\n\n                lft = rgt + 1;\n                return lft;\n            }\n\n            function isInt(value) {\n                return $.isNumeric(value) && Math.floor(value) == value;\n            }\n        },\n\n        returnOptions: function() {\n            return this.options;\n        },\n\n        serialise: function() {\n            return this.serialize();\n        },\n\n        toHierarchy: function(options) {\n\n            var o = $.extend({}, this.options, options),\n                ret = [];\n\n            $(this.element).children(o.items).each(function() {\n                var level = _recursiveItems(this);\n                ret.push(level);\n            });\n\n            return ret;\n\n            function _recursiveItems(item) {\n                var id = ($(item).attr(o.attribute || 'id') || '').match(o.expression || (/(.+)[-=_](.+)/));\n                if (id) {\n                    var currentItem = {\n                        \"id\": id[2]\n                    };\n                    if ($(item).children(o.listType).children(o.items).length > 0) {\n                        currentItem.children = [];\n                        $(item).children(o.listType).children(o.items).each(function() {\n                            var level = _recursiveItems(this);\n                            currentItem.children.push(level);\n                        });\n                    }\n                    return currentItem;\n                }\n            }\n        },\n\n        toArray: function() {\n\n            var o = $.extend({}, this.options, this),\n                sDepth = o.startDepthCount || 0,\n                ret = [],\n                left = 2,\n                list = this,\n                element = list.el.find(list.options.listNodeName).first();\n\n            var items = element.children(list.options.itemNodeName);\n            items.each(function() {\n                left = _recursiveArray($(this), sDepth + 1, left);\n            });\n\n            ret = ret.sort(function(a, b) {\n                return (a.left - b.left);\n            });\n\n            return ret;\n\n            function _recursiveArray(item, depth, left) {\n\n                var right = left + 1,\n                    id,\n                    pid;\n\n                if (item.children(o.options.listNodeName).children(o.options.itemNodeName).length > 0) {\n                    depth++;\n                    item.children(o.options.listNodeName).children(o.options.itemNodeName).each(function() {\n                        right = _recursiveArray($(this), depth, right);\n                    });\n                    depth--;\n                }\n\n                id = item.data().id;\n\n\n                if (depth === sDepth + 1) {\n                    pid = o.rootID;\n                } else {\n\n                    var parentItem = (item.parent(o.options.listNodeName)\n                        .parent(o.options.itemNodeName)\n                        .data());\n                    pid = parentItem.id;\n\n                }\n\n                if (id) {\n                    ret.push({\n                        \"id\": id,\n                        \"parent_id\": pid,\n                        \"depth\": depth,\n                        \"left\": left,\n                        \"right\": right\n                    });\n                }\n\n                left = right + 1;\n                return left;\n            }\n\n        },\n\n        reset: function() {\n            this.mouse = {\n                offsetX: 0,\n                offsetY: 0,\n                startX: 0,\n                startY: 0,\n                lastX: 0,\n                lastY: 0,\n                nowX: 0,\n                nowY: 0,\n                distX: 0,\n                distY: 0,\n                dirAx: 0,\n                dirX: 0,\n                dirY: 0,\n                lastDirX: 0,\n                lastDirY: 0,\n                distAxX: 0,\n                distAxY: 0\n            };\n            this.isTouch = false;\n            this.moving = false;\n            this.dragEl = null;\n            this.dragRootEl = null;\n            this.dragDepth = 0;\n            this.hasNewRoot = false;\n            this.pointEl = null;\n        },\n\n        expandItem: function(li) {\n            li.removeClass(this.options.collapsedClass);\n        },\n\n        collapseItem: function(li) {\n            var lists = li.children(this.options.listNodeName);\n            if (lists.length) {\n                li.addClass(this.options.collapsedClass);\n            }\n        },\n\n        expandAll: function() {\n            var list = this;\n            list.el.find(list.options.itemNodeName).each(function() {\n                list.expandItem($(this));\n            });\n        },\n\n        collapseAll: function() {\n            var list = this;\n            list.el.find(list.options.itemNodeName).each(function() {\n                list.collapseItem($(this));\n            });\n        },\n\n        setParent: function(li) {\n            //Check if li is an element of itemNodeName type and has children\n            if (li.is(this.options.itemNodeName) && li.children(this.options.listNodeName).length) {\n                // make sure NOT showing two or more sets data-action buttons\n                li.children('[data-action]').remove();\n                li.prepend($(this.options.expandBtnHTML));\n                li.prepend($(this.options.collapseBtnHTML));\n            }\n        },\n\n        unsetParent: function(li) {\n            li.removeClass(this.options.collapsedClass);\n            li.children('[data-action]').remove();\n            li.children(this.options.listNodeName).remove();\n        },\n\n        dragStart: function(e) {\n            var mouse = this.mouse,\n                target = $(e.target),\n                dragItem = target.closest(this.options.itemNodeName),\n                position = {\n                    top  : e.pageY,\n                    left : e.pageX\n                };\n\n            var continueExecution = this.options.onDragStart.call(this, this.el, dragItem, position);\n\n            if (typeof continueExecution !== 'undefined' && continueExecution === false) {\n                return;\n            }\n\n            this.placeEl.css('height', dragItem.height());\n\n            mouse.offsetX = e.pageX - dragItem.offset().left;\n            mouse.offsetY = e.pageY - dragItem.offset().top;\n            mouse.startX = mouse.lastX = e.pageX;\n            mouse.startY = mouse.lastY = e.pageY;\n\n            this.dragRootEl = this.el;\n            this.dragEl = $(document.createElement(this.options.listNodeName)).addClass(this.options.listClass + ' ' + this.options.dragClass);\n            this.dragEl.css('width', dragItem.outerWidth());\n\n            this.setIndexOfItem(dragItem);\n\n            // fix for zepto.js\n            //dragItem.after(this.placeEl).detach().appendTo(this.dragEl);\n            dragItem.after(this.placeEl);\n            dragItem[0].parentNode.removeChild(dragItem[0]);\n            dragItem.appendTo(this.dragEl);\n\n            $(document.body).append(this.dragEl);\n            this.dragEl.css({\n                'left': e.pageX - mouse.offsetX,\n                'top': e.pageY - mouse.offsetY\n            });\n            // total depth of dragging item\n            var i, depth,\n                items = this.dragEl.find(this.options.itemNodeName);\n            for (i = 0; i < items.length; i++) {\n                depth = $(items[i]).parents(this.options.listNodeName).length;\n                if (depth > this.dragDepth) {\n                    this.dragDepth = depth;\n                }\n            }\n        },\n\n        //Create sublevel.\n        //  element : element which become parent\n        //  item    : something to place into new sublevel\n        createSubLevel: function(element, item) {\n            var list = $('<' + this.options.listNodeName + '/>').addClass(this.options.listClass);\n            if (item) list.append(item);\n            element.append(list);\n            this.setParent(element);\n            return list;\n        },\n\n        setIndexOfItem: function(item, index) {\n            index = index || [];\n\n            index.unshift(item.index());\n\n            if ($(item[0].parentNode)[0] !== this.dragRootEl[0]) {\n                this.setIndexOfItem($(item[0].parentNode), index);\n            }\n            else {\n                this.dragEl.data('indexOfItem', index);\n            }\n        },\n\n        restoreItemAtIndex: function(dragElement, indexArray) {\n            var currentEl = this.el,\n                lastIndex = indexArray.length - 1;\n\n            //Put drag element at current element position.\n            function placeElement(currentEl, dragElement) {\n                if (indexArray[lastIndex] === 0) {\n                    $(currentEl).prepend(dragElement.clone(true)); //using true saves added to element events.\n                }\n                else {\n                    $(currentEl.children[indexArray[lastIndex] - 1]).after(dragElement.clone(true)); //using true saves added to element events.\n                }\n            }\n            //Diggin through indexArray to get home for dragElement.\n            for (var i = 0; i < indexArray.length; i++) {\n                if (lastIndex === parseInt(i)) {\n                    placeElement(currentEl, dragElement);\n                    return;\n                }\n                //element can have no indexes, so we have to use conditional here to avoid errors.\n                //if element doesn't exist we defenetly need to add new list.\n                var element = (currentEl[0]) ? currentEl[0] : currentEl;\n                var nextEl  = element.children[indexArray[i]];\n                currentEl   = (!nextEl) ? this.createSubLevel($(element)) : nextEl;\n            }\n        },\n\n        dragStop: function(e) {\n            // fix for zepto.js\n            //this.placeEl.replaceWith(this.dragEl.children(this.options.itemNodeName + ':first').detach());\n            var position = {\n                top  : e.pageY,\n                left : e.pageX\n            };\n            //Get indexArray of item at drag start.\n            var srcIndex = this.dragEl.data('indexOfItem');\n\n            var el = this.dragEl.children(this.options.itemNodeName).first();\n\n            el[0].parentNode.removeChild(el[0]);\n\n            this.dragEl.remove(); //Remove dragEl, cause it can affect on indexing in html collection.\n\n            //Before drag stop callback\n            var continueExecution = this.options.beforeDragStop.call(this, this.el, el, this.placeEl.parent());\n            if (typeof continueExecution !== 'undefined' && continueExecution === false) {\n                var parent = this.placeEl.parent();\n                this.placeEl.remove();\n                if (!parent.children().length) {\n                    this.unsetParent(parent.parent());\n                }\n                this.restoreItemAtIndex(el, srcIndex);\n                this.reset();\n                return;\n            }\n\n            this.placeEl.replaceWith(el);\n\n            if (this.hasNewRoot) {\n                if (this.options.fixed === true) {\n                    this.restoreItemAtIndex(el, srcIndex);\n                }\n                else {\n                    this.el.trigger('lostItem');\n                }\n                this.dragRootEl.trigger('gainedItem');\n            }\n            else {\n                this.dragRootEl.trigger('change');\n            }\n\n            this.options.callback.call(this, this.dragRootEl, el, position);\n\n            this.reset();\n        },\n\n        dragMove: function(e) {\n            var list, parent, prev, next, depth,\n                opt = this.options,\n                mouse = this.mouse;\n\n            this.dragEl.css({\n                'left': e.pageX - mouse.offsetX,\n                'top': e.pageY - mouse.offsetY\n            });\n\n            // mouse position last events\n            mouse.lastX = mouse.nowX;\n            mouse.lastY = mouse.nowY;\n            // mouse position this events\n            mouse.nowX = e.pageX;\n            mouse.nowY = e.pageY;\n            // distance mouse moved between events\n            mouse.distX = mouse.nowX - mouse.lastX;\n            mouse.distY = mouse.nowY - mouse.lastY;\n            // direction mouse was moving\n            mouse.lastDirX = mouse.dirX;\n            mouse.lastDirY = mouse.dirY;\n            // direction mouse is now moving (on both axis)\n            mouse.dirX = mouse.distX === 0 ? 0 : mouse.distX > 0 ? 1 : -1;\n            mouse.dirY = mouse.distY === 0 ? 0 : mouse.distY > 0 ? 1 : -1;\n            // axis mouse is now moving on\n            var newAx = Math.abs(mouse.distX) > Math.abs(mouse.distY) ? 1 : 0;\n\n            // do nothing on first move\n            if (!mouse.moving) {\n                mouse.dirAx = newAx;\n                mouse.moving = true;\n                return;\n            }\n\n            // do scrolling if enable\n            if (opt.scroll) {\n                if (typeof window.jQuery.fn.scrollParent !== 'undefined') {\n                    var scrolled = false;\n                    var scrollParent = this.el.scrollParent()[0];\n                    if (scrollParent !== document && scrollParent.tagName !== 'HTML') {\n                        if ((opt.scrollTriggers.bottom + scrollParent.offsetHeight) - e.pageY < opt.scrollSensitivity)\n                            scrollParent.scrollTop = scrolled = scrollParent.scrollTop + opt.scrollSpeed;\n                        else if (e.pageY - opt.scrollTriggers.top < opt.scrollSensitivity)\n                            scrollParent.scrollTop = scrolled = scrollParent.scrollTop - opt.scrollSpeed;\n\n                        if ((opt.scrollTriggers.right + scrollParent.offsetWidth) - e.pageX < opt.scrollSensitivity)\n                            scrollParent.scrollLeft = scrolled = scrollParent.scrollLeft + opt.scrollSpeed;\n                        else if (e.pageX - opt.scrollTriggers.left < opt.scrollSensitivity)\n                            scrollParent.scrollLeft = scrolled = scrollParent.scrollLeft - opt.scrollSpeed;\n                    } else {\n                        if (e.pageY - $(document).scrollTop() < opt.scrollSensitivity)\n                            scrolled = $(document).scrollTop($(document).scrollTop() - opt.scrollSpeed);\n                        else if ($(window).height() - (e.pageY - $(document).scrollTop()) < opt.scrollSensitivity)\n                            scrolled = $(document).scrollTop($(document).scrollTop() + opt.scrollSpeed);\n\n                        if (e.pageX - $(document).scrollLeft() < opt.scrollSensitivity)\n                            scrolled = $(document).scrollLeft($(document).scrollLeft() - opt.scrollSpeed);\n                        else if ($(window).width() - (e.pageX - $(document).scrollLeft()) < opt.scrollSensitivity)\n                            scrolled = $(document).scrollLeft($(document).scrollLeft() + opt.scrollSpeed);\n                    }\n                } else {\n                    console.warn('To use scrolling you need to have scrollParent() function, check documentation for more information');\n                }\n            }\n\n            if (this.scrollTimer) {\n                clearTimeout(this.scrollTimer);\n            }\n\n            if (opt.scroll && scrolled) {\n                this.scrollTimer = setTimeout(function() {\n                    $(window).trigger(e);\n                }, 10);\n            }\n\n            // calc distance moved on this axis (and direction)\n            if (mouse.dirAx !== newAx) {\n                mouse.distAxX = 0;\n                mouse.distAxY = 0;\n            }\n            else {\n                mouse.distAxX += Math.abs(mouse.distX);\n                if (mouse.dirX !== 0 && mouse.dirX !== mouse.lastDirX) {\n                    mouse.distAxX = 0;\n                }\n                mouse.distAxY += Math.abs(mouse.distY);\n                if (mouse.dirY !== 0 && mouse.dirY !== mouse.lastDirY) {\n                    mouse.distAxY = 0;\n                }\n            }\n            mouse.dirAx = newAx;\n\n            /**\n             * move horizontal\n             */\n            if (mouse.dirAx && mouse.distAxX >= opt.threshold) {\n                // reset move distance on x-axis for new phase\n                mouse.distAxX = 0;\n                prev = this.placeEl.prev(opt.itemNodeName);\n                // increase horizontal level if previous sibling exists, is not collapsed, and can have children\n                if (mouse.distX > 0 && prev.length && !prev.hasClass(opt.collapsedClass) && !prev.hasClass(opt.noChildrenClass)) {\n                    // cannot increase level when item above is collapsed\n                    list = prev.find(opt.listNodeName).last();\n                    // check if depth limit has reached\n                    depth = this.placeEl.parents(opt.listNodeName).length;\n                    if (depth + this.dragDepth <= opt.maxDepth) {\n                        // create new sub-level if one doesn't exist\n                        if (!list.length) {\n                            this.createSubLevel(prev, this.placeEl);\n                        }\n                        else {\n                            // else append to next level up\n                            list = prev.children(opt.listNodeName).last();\n                            list.append(this.placeEl);\n                        }\n                    }\n                }\n                // decrease horizontal level\n                if (mouse.distX < 0) {\n                    // we can't decrease a level if an item preceeds the current one\n                    next = this.placeEl.next(opt.itemNodeName);\n                    if (!next.length) {\n                        parent = this.placeEl.parent();\n                        this.placeEl.closest(opt.itemNodeName).after(this.placeEl);\n                        if (!parent.children().length) {\n                            this.unsetParent(parent.parent());\n                        }\n                    }\n                }\n            }\n\n            var isEmpty = false;\n\n            // find list item under cursor\n            if (!hasPointerEvents) {\n                this.dragEl[0].style.visibility = 'hidden';\n            }\n            this.pointEl = $(document.elementFromPoint(e.pageX - document.body.scrollLeft, e.pageY - (window.pageYOffset || document.documentElement.scrollTop)));\n            if (!hasPointerEvents) {\n                this.dragEl[0].style.visibility = 'visible';\n            }\n            if (this.pointEl.hasClass(opt.handleClass)) {\n                this.pointEl = this.pointEl.closest(opt.itemNodeName);\n            }\n            if (this.pointEl.hasClass(opt.emptyClass)) {\n                isEmpty = true;\n            }\n            else if (!this.pointEl.length || !this.pointEl.hasClass(opt.itemClass)) {\n                return;\n            }\n\n            // find parent list of item under cursor\n            var pointElRoot = this.pointEl.closest('.' + opt.rootClass),\n                isNewRoot = this.dragRootEl.data('nestable-id') !== pointElRoot.data('nestable-id');\n\n            /**\n             * move vertical\n             */\n            if (!mouse.dirAx || isNewRoot || isEmpty) {\n                // check if groups match if dragging over new root\n                if (isNewRoot && opt.group !== pointElRoot.data('nestable-group')) {\n                    return;\n                }\n\n                // fixed item's depth, use for some list has specific type, eg:'Volume, Section, Chapter ...'\n                if (this.options.fixedDepth && this.dragDepth + 1 !== this.pointEl.parents(opt.listNodeName).length) {\n                    return;\n                }\n\n                // check depth limit\n                depth = this.dragDepth - 1 + this.pointEl.parents(opt.listNodeName).length;\n                if (depth > opt.maxDepth) {\n                    return;\n                }\n                var before = e.pageY < (this.pointEl.offset().top + this.pointEl.height() / 2);\n                parent = this.placeEl.parent();\n                // if empty create new list to replace empty placeholder\n                if (isEmpty) {\n                    list = $(document.createElement(opt.listNodeName)).addClass(opt.listClass);\n                    list.append(this.placeEl);\n                    this.pointEl.replaceWith(list);\n                }\n                else if (before) {\n                    this.pointEl.before(this.placeEl);\n                }\n                else {\n                    this.pointEl.after(this.placeEl);\n                }\n                if (!parent.children().length) {\n                    this.unsetParent(parent.parent());\n                }\n                if (!this.dragRootEl.find(opt.itemNodeName).length) {\n                    this.appendEmptyElement(this.dragRootEl);\n                }\n                // parent root list has changed\n                this.dragRootEl = pointElRoot;\n                if (isNewRoot) {\n                    this.hasNewRoot = this.el[0] !== this.dragRootEl[0];\n                }\n            }\n        },\n\n        // Append the .dd-empty div to the list so it can be populated and styled\n        appendEmptyElement: function(element) {\n            element.append('<div class=\"' + this.options.emptyClass + '\"/>');\n        }\n    };\n\n    $.fn.nestable = function(params) {\n        var lists  = this,\n            retval = this,\n            args   = arguments;\n\n        if (!('Nestable' in window)) {\n            window.Nestable = {};\n            Nestable.counter = 0;\n        }\n\n        lists.each(function() {\n            var plugin = $(this).data(\"nestable\");\n\n            if (!plugin) {\n                Nestable.counter++;\n                $(this).data(\"nestable\", new Plugin(this, params));\n                $(this).data(\"nestable-id\", Nestable.counter);\n            }\n            else {\n                if (typeof params === 'string' && typeof plugin[params] === 'function') {\n                    if (args.length > 1){\n                        var pluginArgs = [];\n                        for (var i = 1; i < args.length; i++) {\n                            pluginArgs.push(args[i]);\n                        }\n                        retval = plugin[params].apply(plugin, pluginArgs);\n                    }\n                    else {\n                        retval = plugin[params]();\n                    }\n                }\n            }\n        });\n\n        return retval || lists;\n    };\n\n})(window.jQuery || window.Zepto, window, document);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./Modules/Menu/node_modules/nestable2/jquery.nestable.js\n");

/***/ }),

/***/ "./Modules/Menu/Resources/assets/admin/js/main.js":
/*!********************************************************!*\
  !*** ./Modules/Menu/Resources/assets/admin/js/main.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var nestable2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! nestable2 */ \"./Modules/Menu/node_modules/nestable2/jquery.nestable.js\");\n/* harmony import */ var nestable2__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(nestable2__WEBPACK_IMPORTED_MODULE_0__);\n\nwindow.admin.removeSubmitButtonOffsetOn('#image');\n$('#type').on('change', function (e) {\n  $('.link-field').addClass('hide');\n  $(\".\".concat(e.currentTarget.value, \"-field\")).removeClass('hide');\n});\n$('.dd').nestable({\n  maxDepth: 15\n});\n$('.dd').on('change', function () {\n  $.ajax({\n    type: 'PUT',\n    url: route('admin.menus.items.order.update'),\n    contentType: 'application/json; charset=utf-8',\n    data: JSON.stringify($('.dd').nestable('serialize')[0]),\n    success: function (_success) {\n      function success() {\n        return _success.apply(this, arguments);\n      }\n      success.toString = function () {\n        return _success.toString();\n      };\n      return success;\n    }(function () {\n      success(trans('menu::messages.menu_items_order_updated'));\n    }),\n    error: function (_error) {\n      function error(_x) {\n        return _error.apply(this, arguments);\n      }\n      error.toString = function () {\n        return _error.toString();\n      };\n      return error;\n    }(function (xhr) {\n      error(xhr.responseJSON.message);\n    })\n  });\n});\nvar id;\nvar confirmationModal = $('#confirmation-modal');\n$('.delete-menu-item').on('click', function (e) {\n  id = $(e.currentTarget).closest('.dd-item').data('id');\n  confirmationModal.modal('show');\n});\nconfirmationModal.find('form').on('submit', function (e) {\n  e.preventDefault();\n  confirmationModal.modal('hide');\n  $.ajax({\n    type: 'DELETE',\n    url: route('admin.menus.items.destroy', id),\n    success: function (_success2) {\n      function success() {\n        return _success2.apply(this, arguments);\n      }\n      success.toString = function () {\n        return _success2.toString();\n      };\n      return success;\n    }(function () {\n      success(trans('menu::messages.menu_item_deleted'));\n      $(\".dd-item[data-id=\\\"\".concat(id, \"\\\"]\")).fadeOut();\n    }),\n    error: function (_error2) {\n      function error(_x2) {\n        return _error2.apply(this, arguments);\n      }\n      error.toString = function () {\n        return _error2.toString();\n      };\n      return error;\n    }(function (xhr) {\n      error(xhr.responseJSON.message);\n    })\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9Nb2R1bGVzL01lbnUvUmVzb3VyY2VzL2Fzc2V0cy9hZG1pbi9qcy9tYWluLmpzLmpzIiwibWFwcGluZ3MiOiI7OztBQUFtQjtBQUVuQkEsTUFBTSxDQUFDQyxLQUFLLENBQUNDLDBCQUEwQixDQUFDLFFBQVEsQ0FBQztBQUVqREMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDQyxFQUFFLENBQUMsUUFBUSxFQUFFLFVBQUNDLENBQUMsRUFBSztFQUMzQkYsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxDQUFDRyxRQUFRLENBQUMsTUFBTSxDQUFDO0VBQ2pDSCxDQUFDLEtBQUFJLE1BQUEsQ0FBS0YsQ0FBQyxDQUFDRyxhQUFhLENBQUNDLEtBQUssWUFBUyxDQUFDQyxXQUFXLENBQUMsTUFBTSxDQUFDO0FBQzVELENBQUMsQ0FBQztBQUVGUCxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUNRLFFBQVEsQ0FBQztFQUFFQyxRQUFRLEVBQUU7QUFBRyxDQUFDLENBQUM7QUFFbkNULENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQ0MsRUFBRSxDQUFDLFFBQVEsRUFBRSxZQUFNO0VBQ3hCRCxDQUFDLENBQUNVLElBQUksQ0FBQztJQUNIQyxJQUFJLEVBQUUsS0FBSztJQUNYQyxHQUFHLEVBQUVDLEtBQUssQ0FBQyxnQ0FBZ0MsQ0FBQztJQUM1Q0MsV0FBVyxFQUFFLGlDQUFpQztJQUM5Q0MsSUFBSSxFQUFFQyxJQUFJLENBQUNDLFNBQVMsQ0FBQ2pCLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQ1EsUUFBUSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3ZEVSxPQUFPLFlBQUFDLFFBQUE7TUFBQSxTQUFBRCxRQUFBO1FBQUEsT0FBQUMsUUFBQSxDQUFBQyxLQUFBLE9BQUFDLFNBQUE7TUFBQTtNQUFBSCxPQUFBLENBQUFJLFFBQUE7UUFBQSxPQUFBSCxRQUFBLENBQUFHLFFBQUE7TUFBQTtNQUFBLE9BQUFKLE9BQUE7SUFBQSxjQUFHO01BQ05BLE9BQU8sQ0FBQ0ssS0FBSyxDQUFDLHlDQUF5QyxDQUFDLENBQUM7SUFDN0QsQ0FBQztJQUNEQyxLQUFLLFlBQUFDLE1BQUE7TUFBQSxTQUFBRCxNQUFBRSxFQUFBO1FBQUEsT0FBQUQsTUFBQSxDQUFBTCxLQUFBLE9BQUFDLFNBQUE7TUFBQTtNQUFBRyxLQUFBLENBQUFGLFFBQUE7UUFBQSxPQUFBRyxNQUFBLENBQUFILFFBQUE7TUFBQTtNQUFBLE9BQUFFLEtBQUE7SUFBQSxZQUFDRyxHQUFHLEVBQUU7TUFDUEgsS0FBSyxDQUFDRyxHQUFHLENBQUNDLFlBQVksQ0FBQ0MsT0FBTyxDQUFDO0lBQ25DLENBQUM7RUFDTCxDQUFDLENBQUM7QUFDTixDQUFDLENBQUM7QUFFRixJQUFJQyxFQUFFO0FBQ04sSUFBSUMsaUJBQWlCLEdBQUcvQixDQUFDLENBQUMscUJBQXFCLENBQUM7QUFFaERBLENBQUMsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDQyxFQUFFLENBQUMsT0FBTyxFQUFFLFVBQUNDLENBQUMsRUFBSztFQUN0QzRCLEVBQUUsR0FBRzlCLENBQUMsQ0FBQ0UsQ0FBQyxDQUFDRyxhQUFhLENBQUMsQ0FBQzJCLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQ2pCLElBQUksQ0FBQyxJQUFJLENBQUM7RUFFdERnQixpQkFBaUIsQ0FBQ0UsS0FBSyxDQUFDLE1BQU0sQ0FBQztBQUNuQyxDQUFDLENBQUM7QUFFRkYsaUJBQWlCLENBQUNHLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQ2pDLEVBQUUsQ0FBQyxRQUFRLEVBQUUsVUFBQ0MsQ0FBQyxFQUFLO0VBQy9DQSxDQUFDLENBQUNpQyxjQUFjLEVBQUU7RUFFbEJKLGlCQUFpQixDQUFDRSxLQUFLLENBQUMsTUFBTSxDQUFDO0VBRS9CakMsQ0FBQyxDQUFDVSxJQUFJLENBQUM7SUFDSEMsSUFBSSxFQUFFLFFBQVE7SUFDZEMsR0FBRyxFQUFFQyxLQUFLLENBQUMsMkJBQTJCLEVBQUVpQixFQUFFLENBQUM7SUFDM0NaLE9BQU8sWUFBQWtCLFNBQUE7TUFBQSxTQUFBbEIsUUFBQTtRQUFBLE9BQUFrQixTQUFBLENBQUFoQixLQUFBLE9BQUFDLFNBQUE7TUFBQTtNQUFBSCxPQUFBLENBQUFJLFFBQUE7UUFBQSxPQUFBYyxTQUFBLENBQUFkLFFBQUE7TUFBQTtNQUFBLE9BQUFKLE9BQUE7SUFBQSxjQUFHO01BQ05BLE9BQU8sQ0FBQ0ssS0FBSyxDQUFDLGtDQUFrQyxDQUFDLENBQUM7TUFFbER2QixDQUFDLHVCQUFBSSxNQUFBLENBQXNCMEIsRUFBRSxTQUFLLENBQUNPLE9BQU8sRUFBRTtJQUM1QyxDQUFDO0lBQ0RiLEtBQUssWUFBQWMsT0FBQTtNQUFBLFNBQUFkLE1BQUFlLEdBQUE7UUFBQSxPQUFBRCxPQUFBLENBQUFsQixLQUFBLE9BQUFDLFNBQUE7TUFBQTtNQUFBRyxLQUFBLENBQUFGLFFBQUE7UUFBQSxPQUFBZ0IsT0FBQSxDQUFBaEIsUUFBQTtNQUFBO01BQUEsT0FBQUUsS0FBQTtJQUFBLFlBQUNHLEdBQUcsRUFBRTtNQUNQSCxLQUFLLENBQUNHLEdBQUcsQ0FBQ0MsWUFBWSxDQUFDQyxPQUFPLENBQUM7SUFDbkMsQ0FBQztFQUNMLENBQUMsQ0FBQztBQUNOLENBQUMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2ZsZWV0Y2FydC8uL01vZHVsZXMvTWVudS9SZXNvdXJjZXMvYXNzZXRzL2FkbWluL2pzL21haW4uanM/NTc0MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ25lc3RhYmxlMic7XHJcblxyXG53aW5kb3cuYWRtaW4ucmVtb3ZlU3VibWl0QnV0dG9uT2Zmc2V0T24oJyNpbWFnZScpO1xyXG5cclxuJCgnI3R5cGUnKS5vbignY2hhbmdlJywgKGUpID0+IHtcclxuICAgICQoJy5saW5rLWZpZWxkJykuYWRkQ2xhc3MoJ2hpZGUnKTtcclxuICAgICQoYC4ke2UuY3VycmVudFRhcmdldC52YWx1ZX0tZmllbGRgKS5yZW1vdmVDbGFzcygnaGlkZScpO1xyXG59KTtcclxuXHJcbiQoJy5kZCcpLm5lc3RhYmxlKHsgbWF4RGVwdGg6IDE1IH0pO1xyXG5cclxuJCgnLmRkJykub24oJ2NoYW5nZScsICgpID0+IHtcclxuICAgICQuYWpheCh7XHJcbiAgICAgICAgdHlwZTogJ1BVVCcsXHJcbiAgICAgICAgdXJsOiByb3V0ZSgnYWRtaW4ubWVudXMuaXRlbXMub3JkZXIudXBkYXRlJyksXHJcbiAgICAgICAgY29udGVudFR5cGU6ICdhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PXV0Zi04JyxcclxuICAgICAgICBkYXRhOiBKU09OLnN0cmluZ2lmeSgkKCcuZGQnKS5uZXN0YWJsZSgnc2VyaWFsaXplJylbMF0pLFxyXG4gICAgICAgIHN1Y2Nlc3MoKSB7XHJcbiAgICAgICAgICAgIHN1Y2Nlc3ModHJhbnMoJ21lbnU6Om1lc3NhZ2VzLm1lbnVfaXRlbXNfb3JkZXJfdXBkYXRlZCcpKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIGVycm9yKHhocikge1xyXG4gICAgICAgICAgICBlcnJvcih4aHIucmVzcG9uc2VKU09OLm1lc3NhZ2UpO1xyXG4gICAgICAgIH0sXHJcbiAgICB9KTtcclxufSk7XHJcblxyXG5sZXQgaWQ7XHJcbmxldCBjb25maXJtYXRpb25Nb2RhbCA9ICQoJyNjb25maXJtYXRpb24tbW9kYWwnKTtcclxuXHJcbiQoJy5kZWxldGUtbWVudS1pdGVtJykub24oJ2NsaWNrJywgKGUpID0+IHtcclxuICAgIGlkID0gJChlLmN1cnJlbnRUYXJnZXQpLmNsb3Nlc3QoJy5kZC1pdGVtJykuZGF0YSgnaWQnKTtcclxuXHJcbiAgICBjb25maXJtYXRpb25Nb2RhbC5tb2RhbCgnc2hvdycpO1xyXG59KTtcclxuXHJcbmNvbmZpcm1hdGlvbk1vZGFsLmZpbmQoJ2Zvcm0nKS5vbignc3VibWl0JywgKGUpID0+IHtcclxuICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuXHJcbiAgICBjb25maXJtYXRpb25Nb2RhbC5tb2RhbCgnaGlkZScpO1xyXG5cclxuICAgICQuYWpheCh7XHJcbiAgICAgICAgdHlwZTogJ0RFTEVURScsXHJcbiAgICAgICAgdXJsOiByb3V0ZSgnYWRtaW4ubWVudXMuaXRlbXMuZGVzdHJveScsIGlkKSxcclxuICAgICAgICBzdWNjZXNzKCkge1xyXG4gICAgICAgICAgICBzdWNjZXNzKHRyYW5zKCdtZW51OjptZXNzYWdlcy5tZW51X2l0ZW1fZGVsZXRlZCcpKTtcclxuXHJcbiAgICAgICAgICAgICQoYC5kZC1pdGVtW2RhdGEtaWQ9XCIke2lkfVwiXWApLmZhZGVPdXQoKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIGVycm9yKHhocikge1xyXG4gICAgICAgICAgICBlcnJvcih4aHIucmVzcG9uc2VKU09OLm1lc3NhZ2UpO1xyXG4gICAgICAgIH0sXHJcbiAgICB9KTtcclxufSk7XHJcbiJdLCJuYW1lcyI6WyJ3aW5kb3ciLCJhZG1pbiIsInJlbW92ZVN1Ym1pdEJ1dHRvbk9mZnNldE9uIiwiJCIsIm9uIiwiZSIsImFkZENsYXNzIiwiY29uY2F0IiwiY3VycmVudFRhcmdldCIsInZhbHVlIiwicmVtb3ZlQ2xhc3MiLCJuZXN0YWJsZSIsIm1heERlcHRoIiwiYWpheCIsInR5cGUiLCJ1cmwiLCJyb3V0ZSIsImNvbnRlbnRUeXBlIiwiZGF0YSIsIkpTT04iLCJzdHJpbmdpZnkiLCJzdWNjZXNzIiwiX3N1Y2Nlc3MiLCJhcHBseSIsImFyZ3VtZW50cyIsInRvU3RyaW5nIiwidHJhbnMiLCJlcnJvciIsIl9lcnJvciIsIl94IiwieGhyIiwicmVzcG9uc2VKU09OIiwibWVzc2FnZSIsImlkIiwiY29uZmlybWF0aW9uTW9kYWwiLCJjbG9zZXN0IiwibW9kYWwiLCJmaW5kIiwicHJldmVudERlZmF1bHQiLCJfc3VjY2VzczIiLCJmYWRlT3V0IiwiX2Vycm9yMiIsIl94MiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./Modules/Menu/Resources/assets/admin/js/main.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./Modules/Menu/Resources/assets/admin/js/main.js");
/******/ 	
/******/ })()
;